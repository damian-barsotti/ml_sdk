version: "3.2"
services:
  traefik:
    image: "traefik:v2.0.0-rc3"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  api:
    image: ml_api
    build:
      context: .
      dockerfile: ./api/Dockerfile
    # ports:
    #   - "80:80"
    tty: true
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api.loadbalancer.server.port=80"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.entrypoints=web"

  model:
    image: model
    build:
      context: ./
      dockerfile: ./model/Dockerfile
    tty: true

  redis:
    image: redis:5.0.6
    ports:
      - 6379:6379

  # zookeeper:
  #   image: 'bitnami/zookeeper:latest'
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   networks:
  #     - app-tier

  # kafka:
  #   image: 'bitnami/kafka:latest'
  #   ports:
  #     - '9092:9092'
  #     - '9093:9093'
  #   environment:
  #     - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
  #     - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - app-tier
  